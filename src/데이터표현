- 2진법 : 0과 1이라는 두 수만을 사용하여 수를 나타내는 진법.
- 컴퓨터는 전류 신호가 켜졌는지 꺼졌는지를 구분하는 전자기기이기 때문에 이진법을 사용하게 됨
- 이진법을 나타내는 방법은 알파벳 B를 숫자 뒤에 붙여주면 됨. Ex) 0B1100
Cf) 8진수인 경우에는 0, 16진수인 경우는 0X 
Ex) 012, 0XA

* 이진수의 음수 표현
: 보수를 이용해 음수를 나타내는 방법은 4가지나 있음
부호화 절댓값, 1의 보수 방식, 2의 보수 방식, 상쇄 이진수 
보통 2의 보수 방식이 가장 널리 이용(편리함과 경제적 효율성때문)

- 1의 보수 : 양수에서 모든 비트를 반전시켜서 표현하는 것
- 2의 보수 : 1의 보수 값에서 1을 더한 것
Ex) 0000 0101 = 숫자 5 
	∴ (2^2)+(2^0)=4+1=5 ▶ ㅁ1을 읽으면 됨
	1111 1010 = 비트 반전 (1의 보수에서의 -5)
	// 1111 1010 = 250
	1111 1011 = 비트 반전에서 1을 더함 (2의 보수에서의 -5) 
	∴ -(2^2)-1 = -5 ▶ 비트 부호가 1이니깐 음수이고 비트반전 후 1을 더해줬으니깐 반대로 1을 빼줌

* 부호 비트	
(비트 : 0또는 1로 표현할 수 있는 최소 단위)
: 부호비트는 음수를 나타내기 위해서 만들어짐
제일 왼쪽에 있는 최상위 비트가 부호를 나타내도록 설정하는 것이 부호비트
Ex) 1000 ← 1이 제일 왼쪽에 있으므로 부호비트
1의 보수, 2의 보수, 부호화 절댓값 방식에서 모두 통용하는 방식으로, 부호비트가 0이면 양수 혹은 양의 0,
1이면 음수 혹은 음의 0 을 나타냄

0000 0011 + 1111 1011 = 1111 1110
	   └>3		   └>-5 
 1111 1011	① 절대값이 큰 수가 첫 번째 수가 되도록 함
+0000 0011
-----------
 1111 1000
 		
◈음수 이진법 뺄셈◈ 
 0000 0101 ② 3-5=-(5-3)과 같음. 그래서 5를 양수로 만들어주고 뺀 뒤여 - 부호만 붙여줌...!
-0000 0011
-----------
-0000 0010 ③ 결과값에 음수를 취해주면 됨.
1111 1101
★ 1111 1110 : -1-1 = -2!!!!!!! 

Cf) 8비트 = 1바이트
- 1개의 비트로 나타낼 수 있는 수의 범위 → 0, 1 (2^1개)
- 2개의 비트로 나타낼 수 있는 수의 범위 → 00, 01, 10, 11 (2^2개)

* 기본 자료형
					정수형	문자형	실수형	논리형	*수의 범위
1바이트(8비트=2^8) 		byte	-		-		boolean	-2^7~2^7-1
2바이트(16비트=2^16)	short	char	-		-		-2^15~2^15-1
4바이트(32비트=2^32)	int		-		float	-		-2^31~2^31-1
8바이트(64비트=2^64)	long	-		double	-		-2^63~2^63-1
*수의 범위는 비트 부호때문에 비트 하나를 빼고, 양수의 범위는 0을 뺀 범위라 -1을 해줌!



