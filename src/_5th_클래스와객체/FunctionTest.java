package _5th_클래스와객체;
/////////////////////////////////////클래스, 객체, 인스턴스 정리_1
public class FunctionTest {
	public static void main(String[] args) { // main() 함수는 자바 가상 머신(JVM)이 프로그램을 시작하기 위해 호출하는 함수. 클래스 내부에 만들지만, 클래스의 메서드는 아님!
		int num1 = 10; //멤버변수 = 인스턴스 변수 = 속성 = 특성
		int num2=  20;
		
		int sum = add(num1, num2); // ▶ add() 함수 호출하는 메서드 : 클래스 내부에서 사용 하는 메서드(멤버함수)는 멤버 변수를 사용하여 클래스의 기능을 구현.
		System.out.println(num1 + "+" + num2 + "=" + sum + "입니다");
	}
	
	
	// ▶ add() 함수
	//매개변수 n1, n2 : 매개변수는 함수의 입력으로 받는 변수임.
	public static int add(int n1, int n2) { //멤버 함수 = 메서드(method) : 얘는 클래스 외부에 있는 메서드(멤버함수)
		int result = n1 + n2;
		return result; // return 예약어는 함수 수행을 끝내고 프로그램 흐름 중에서 호출한 곳으로 다시 되돌아갈 때도 사용 가능.
		// result 는 int sum 변수에 값을 반홤해줌.
		
	}
	
	
	/*************
	● 함수 호출과 스택 메모리 ●
	함수를 호출하면 그 함수만을 위한 메모리 공간이 할당 되는데, 이 메모리 공간을 스택(stack)이라고 함.
	프로그램을 시작하면 main 함수부터 호출하기 때문에 가장 먼저 main() 함수에 포함된 변수 num1, num2, sum 을 저장할 메모리 공간이 생성
	그리고 main() 함수에서 add() 함수를 호출하면 add() 함수를 저장할 메모리 공간이 새롭게 생성.
	add()함수 수행이 끝나고 결과 값이 반환되면(return) add()함수가 사용하던 메모리 공간은 자동으로 사라짐(자바의 가비지 컬렉터)
	∴ 함수를 호출한 순서대로 메모리 공간이 만들어지고 맨 마지막에 호출한 함수부터 반환됨. LIFO(Last In First Out)
	
	 
	 Cf) main()에서 사용하는 변수 num1, num2 변수와 add() 함수에서 사용 하는 n1, n2 변수는 서로 다른 메모리 공간을 사용하기 때문에 이름이 같든 다르든 상관없음.
	 이렇게 함수 내부에서만 사용하는 변수를 지역변수라고 함. ▶ 지역 변수는 스택 메모리에 생성됨!
	 *************/
	
}
 